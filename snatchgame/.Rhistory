if (length(char1) == length(char2))
print('Equal Length')
else
print('Not Equal Length')
}
compare('EPS568', 'SummerA')
compare = function(char1, char2) {
if (length(char1) == length(char2))
print('Equal Length')
else
print('Not Equal Length')
}
compare('EPS568', 'SummerAasdfasdf')
compare = function(char1, char2) {
if (length(char1) == length(char2))
print('Equal Length') else
print('Not Equal Length')
}
compare('EPS568', 'SummerAasdfasdf')
compare = function(char1, char2) {
if (length(char1) == length(char2))
print('Equal Length') else
print('Not Equal Length')
}
compare('EPS568', 'SummerAasdfasdf')
compare = function(char1, char2) {
if (length(char1) == length(char2))
return('Equal Length') else
return('Not Equal Length')
}
compare('EPS568', 'SummerAasdfasdf')
compare = function(char1, char2) {
if (length(char1) == length(char2))
return('Equal Length') else
return('Not Equal Length')
}
compare('EPS568', 'SummerAasdfasdf')
compare = function(char1, char2) {
if (length(char1) == length(char2))
return('Equal Length') else
return('Not Equal Length')
}
compare('EPS568', 'SummerA')
compare('EPS568', 'SummerA')
length('EPS568')
strlength('EPS568')
nchar('EPS568')
compare = function(char1, char2) {
if (nchar(char1) == nchar(char2))
return('Equal Length') else
return('Not Equal Length')
}
compare('EPS568', 'Summer')
compare = function(char1, char2) {
if (nchar(char1) == nchar(char2))
return('Equal Length') else
return('Not Equal Length')
}
compare('EPS568', 'SummerAA')
compare = function(char1, char2) {
if (nchar(char1) == nchar(char2))
return('Equal Length') else
return('Not Equal Length')
}
compare('EPS568', 'Summer')
compare('EPS568', 'SummerA')
median(c(1, 2, 3, 4, 5))
median(c(1, 2, 4, 4, 5))
median(c(1, 2, 4, 4, 200))
absolute value?
?absolute value
?abs
?mad
mad(c(1, 8, 2, 3, 4, 5, 1, 23, 6, 7, 8))
mymad = function(X) {
return(median(abs(X - median(X))))
}
mad(c(1, 8, 2, 3, 4, 5, 1, 23, 6, 7, 8))
mymad(c(1, 8, 2, 3, 4, 5, 1, 23, 6, 7, 8))
median(abs(X - median(X)))
mymad = function(X) {
return(median(abs(X - median(X))))
}
#mad(c(1, 8, 2, 3, 4, 5, 1, 23, 6, 7, 8))
#mymad(c(1, 8, 2, 3, 4, 5, 1, 23, 6, 7, 8))
X = c(1, 8, 2, 3, 4, 5, 1, 23, 6, 7, 8)
median(abs(X - median(X)))
X - median(X)
abs(X - median(X))
median(abs(X - median(X)))
mymad = function(X) {
return(median(abs(X - median(X))))
}
X = c(1, 8, 2, 3, 4, 5, 1, 23, 6, 7, 8)
mad(X, constant = 1)
mymad(X)
matvec = c(1, 2, 3, 4, 5, 6)
matrix1 <- matrix(matvec, nrow = 2, ncol = 3)
matrix1
matvec = c(1, 2, 3, 4, 5, 6)
matrix1 <- matrix(matvec, nrow = 2, ncol = 3)
mulvec = c(2, 0, 1)
matrix1 * mulvec
i=2
x = c(1, 2)
while (x[i] < 4000000) {
x[i+1] = x[i-1] + x[i]
i=i+1 }
x = x[-i]
sum(x * c(0,1))
A = data.frame(c(1, 2, 3), c(1, 2, 3), c(1, 2, 3))
A
A = data.frame(c(1, 2, 3), c(1, 2, 3), c(1, 2, 3))
A
x = c(1, 2, 3)
result = c()
for (i in 1:ncol(A)){
total[i] = total[i] + A[i,j]*x[j]
}
A = data.frame(c(1, 2, 3), c(1, 2, 3), c(1, 2, 3))
A
x = c(1, 2, 3)
result = c()
for (i in 1:ncol(A)){
result[i] = result[i] + A[i,j]*x[j]
}
A = data.frame(c(1, 2, 3), c(1, 2, 3), c(1, 2, 3))
A
x = c(1, 2, 3)
result = c()
for (i in 1:ncol(A)){
result[i]=0
for (j in 1:ncol(A)){
result[i] = result[i] + A[i,j]*x[j]
}
}
result
install.packages('rmarkdown', dependencies = TRUE)
result
install.packages("rmarkdown", dependencies = TRUE)
library(dplyr)
install.packages('dplyr')
library(dplyr)
library(dplyr)
install.packages("dplyr")
install.packages("tidyverse")
library('dplyr')
library('dplyr')
install.packages('dplyr')
library('dplyr')
install.packages("tidyverse")
library('dplyr')
install.packages("tidyverse", dependences = TRUE)
library('dplyr')
install.packages("tidyverse")
library('dplyr')
library('dplyr')
packages.install('dplyr')
install.packages('dplyr')
library('dplyr')
install.packages('tidyverse')
library('dplyr')
install.packages(c("dplyr", "tibble", "magrittr", "tidyr", "psych", "ggplot2"))
library('tidyr')
library('dplyr')
.libPaths()
install.packages('tidyverse', dependences = TRUE)
library('dplyr')
install.packages('stringr', dependencies = TRUE)
librar('stringr')
library('stringr')
library("Rcpp", lib.loc="~/anaconda3/envs/tryout2/lib/R/library")
install.packages("Rcpp")
install.packages('tidyverse', dependencies = TRUE)
library('tidyverse')
library("Rcpp", lib.loc="~/anaconda3/envs/tryout2/lib/R/library")
detach("package:Rcpp", unload=TRUE)
install.packages("tidyverse")
install.packages("~/Downloads/tidyverse_2.0.0.tar", repos = NULL)
library('tidyverse')
library("magrittr", lib.loc="~/anaconda3/envs/tryout2/lib/R/library")
install.packages("magrittr")
library("magrittr", lib.loc="~/anaconda3/envs/tryout2/lib/R/library")
detach("package:magrittr", unload=TRUE)
library("magrittr", lib.loc="~/anaconda3/envs/tryout2/lib/R/library")
library('tidyverse')
install.packages("~/Downloads/magrittr_2.0.3.tar", repos = NULL)
library('tidyverse')
library('tidyverse')
install.packages('tidyverse', dependencies = TRUE)
library('tidyverse')
library('tidyverse')
library(magrittr)
detach("package:magrittr", unload=TRUE)
library("magrittr", lib.loc="~/anaconda3/envs/tryout2/lib/R/library")
df
df <- data.frame(
color = c("blue","black", "blue", "blue","black"),
value = 1:5)
df
library(ggplot2)
library(dplyr)
library('ggplot2')
library('dplyr')
library('tidyverse')
library('stringr')
install.packages('ggplot2', dependencies = TRUE)
library('ggplot2')
library('ggplot2')
library('dplyr')
install.packages('tidyverse', dependencies = TRUE)
library('tidyverse')
install.packages('tidyverse', dependencies = TRUE, type = binary)
install.packages('tidyverse', dependencies = TRUE, type = Binary)
install.packages('tidyverse', dependencies = TRUE, type = 'binary')
install.packages('shiny')
install.packages('shiny')
library('shiny')
shiny::runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
library(scales)
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
#--------------------------------------------------------------
genrecheck <- bigjoin2 %>% distinct(uniqueid, season, internat, queen, character, tsb, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('musician', 'pubfig'))
#---------------------
ggplot(genrecheck %>% group_by(genres) %>% mutate(weight = 1/n()),
aes(x = tsb, fill = genres)) +
geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') + labs(title = 'Percent Placement by Genre', x = 'Placement', y = 'Percentage')
#---
genrecheck1 %>% group_by(genres) %>% mutate(weight = 1/n()) %>%
ggplot(aes(x = tsb, fill = genres)) + geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') +
labs(title = 'Percent Placement by Genre', x = 'Placement', y = 'Percentage')
#---
genrecheck %>% group_by(genres) %>% mutate(weight = 1/n()) %>%
ggplot(aes(x = tsb, fill = genres)) + geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') +
labs(title = 'Percent Placement by Genre', x = 'Placement', y = 'Percentage')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
shiny::runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
shiny::runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
libary(data.table)
library(data.table)
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
packages.install('bslib')
install.packages('bslib')
library(bslib)
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
pwc
pwc
pwc <- pairwise.t.test(genrecheck2$score, genrecheck2$genres, p.adj= 'none')
genrecheck2 <- bigjoin2 %>% distinct(uniqueid, character, tsb, score, genres)
genrecheck2
pwc <- pairwise.t.test(genrecheck2$score, genrecheck2$genres, p.adj= 'none')
pwc
data.frame(pwc)
DT(pwc)
data.frame(pwc)
pwc['p-value']
summary(pwc)
pwc
pwc[['p.value']]
jingle <- write.table(pwc[['p.value']])
jingle
summary(jingle)
jingle <- write.table(pwc[['p.value']])
summary(jingle)
jingle
?write.table
genttest <- write.table(pwc[['p.value']], 'genmatrix.csv', sep=',')
genttest
read_csv('./genmatrix.csv')
pvalues <- read_csv('./genmatrix.csv')
genttest <- write.table(pwc[['p.value']], 'genmatrix.csv', sep=',')
pvalues <- read_csv('./genmatrix.csv')
summary(pvalues)
pvalues
summary(pvalues)
pvalues$comedicent = as.numeric(pvalues$comedicent)
pvales$tv = as.numeric(pvalues$tv)
summary(pvalues)
summary(pvalues)
pvalues$tv = as.numeric(pvalues$tv)
summary(pvalues)
pvalues
genttest <- write.table(pwc[['p.value']], 'genmatrix.csv')
genttest
pvalues <- read_csv('./genmatrix.csv')
spec(pvalues)
pwc
genrecheck2 %>% filter(genres == 'writer')
pwc <- pairwise.t.test(genrecheck2$score, genrecheck2$genres, p.adj= 'none')
pwc
data.table(pwc)
data.table(pwc[['p.value']])
data.table(pwc[['p.value']]) %>% mutate_if(is.numeric, ~round(., 4))
?data.table
data.table(pwc[['p.value']], keep.rownames = T) %>% mutate_if(is.numeric, ~round(., 4))
data.table(pwc[['p.value']], keep.rownames = T) %>% rename(X = rn) %>% mutate_if(is.numeric, ~round(., 4))
mytest <- data.table(pwc[['p.value']], keep.rownames = T) %>% rename(X = rn) %>% mutate_if(is.numeric, ~round(., 4))
mytest
mytest
cf <- condformat(mytest) %>% rule_text_bold(., expression <= .05)
mytest
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
deadalivecheck <- bigjoin2 %>% distinct(uniqueid, character, score, alive)
doa <- ggplot(data = deadalivecheck, aes(x=score, group=alive, fill = alive)) + geom_density(adjust = .5, alpha = .5)
doa
doa <- ggplot(data = deadalivecheck, aes(x=score, group=alive, fill = alive)) + geom_bar()
doa
doa <- ggplot(data = deadalivecheck, aes(x=score, group=alive, fill = alive)) + geom_bar(aes(weight = weight), stat = 'count', position = 'dodge')
doa
doa <- ggplot(data = deadalivecheck, aes(x=score, group=alive, fill = alive)) + geom_bar(position = 'dodge')
doa
deadalivecheck <- bigjoin2 %>% distinct(uniqueid, character, tsb, alive)
ggplot(deadalivecheck %>% group_by(genres) %>% mutate(weight = 1/n()),
aes(x = tsb, fill = genres)) +
geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') + labs(title = 'Percent Placement by Genre', x = 'Placement', y = 'Percentage')
deadalivecheck <- bigjoin2 %>% distinct(uniqueid, character, tsb, alive)
ggplot(deadalivecheck %>% group_by(alive) %>% mutate(weight = 1/n()),
aes(x = tsb, fill = alive)) +
geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') + labs(title = 'Percent Placement by Genre', x = 'Placement', y = 'Percentage')
#---
deadalivecheck %>% group_by(alive) %>% mutate(weight = 1/n()) %>%
ggplot(aes(x = tsb, fill = genres)) + geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') +
labs(title = 'Percent Placement by Genre', x = 'Placement', y = 'Percentage')
#---
deadalivecheck %>% group_by(alive) %>% mutate(weight = 1/n()) %>%
ggplot(aes(x = tsb, fill = alive)) + geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') +
labs(title = 'Percent Placement by Genre', x = 'Placement', y = 'Percentage')
deadalivecheck <- bigjoin2 %>% distinct(uniqueid, character, tsb, alive)
ggplot(deadalivecheck %>% group_by(alive) %>% mutate(weight = 1/n()),
aes(x = tsb, fill = alive)) +
geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') + labs(title = 'Percent Placement by Genre', x = 'Placement', y = 'Percentage')
#---
deadalivecheck %>% group_by(alive) %>% mutate(weight = 1/n()) %>%
ggplot(aes(x = tsb, fill = alive)) + geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') +
labs(title = 'Percent Placement by Genre', x = 'Placement', y = 'Percentage')
deadalivecheck <- bigjoin2 %>% distinct(uniqueid, character, tsb, alive)
ggplot(data = deadalivecheck, aes(x=tsb, group=alive, fill = alive)) + geom_bar(position = 'dodge')
#---
deadalivecheck %>% group_by(alive) %>% mutate(weight = 1/n()) %>%
ggplot(aes(x = tsb, fill = alive)) + geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') +
labs(title = 'Percent Placement by Genre', x = 'Placement', y = 'Percentage')
deadalivecheck %>% ggplot(., aes(x = tsb, group=alive, fill = alive)) + geom_bar(position = 'dodge') +
scale_y_continuous(breaks = pretty_breaks()) + scale_fill_manual(values = c("#8344AD", "#27AE60"))
scale_fill_discrete(labels=c('dead', 'alive))
deadalivecheck %>% ggplot(., aes(x = tsb, group=alive, fill = alive)) + geom_bar(position = 'dodge') +
deadalivecheck %>% ggplot(aes(x = tsb, group=alive, fill = alive)) + geom_bar(position = 'dodge') +
scale_y_continuous(breaks = pretty_breaks()) + scale_fill_manual(values = c("#8344AD", "#27AE60")) +
scale_fill_discrete(labels=c('dead', 'alive'))
deadalivecheck %>% ggplot(aes(x = tsb, group=alive, fill = alive)) + geom_bar(position = 'dodge') +
scale_y_continuous(breaks = pretty_breaks()) + scale_fill_manual(values = c("#8344AD", "#27AE60")) +
scale_fill_discrete(name = "", labels=c('dead', 'alive'))
deadalivecheck %>% group_by(alive) %>% mutate(weight = 1/n()) %>%
ggplot(aes(x = tsb, fill = alive)) + geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') +
scale_fill_manual(values = c("#8344AD", "#27AE60")) +
labs(title = 'Dead Characters Tend to Perform Better', x = 'Placement', y = 'Percentage')
deadalivecheck %>% group_by(alive) %>% mutate(weight = 1/n()) %>%
ggplot(aes(x = tsb, fill = alive)) + geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') +
scale_fill_manual(values = c("#8344AD", "#27AE60")) +
labs(title = 'Dead Characters Tend to Perform Better', x = 'Placement', y = 'Percentage')
deadalivecheck %>% group_by(alive) %>% mutate(avgscore = round(mean(score), 3)) %>%
ungroup() %>% mutate(alive_update = paste0("Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb, fill = alive)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) +
scale_fill_manual(values = c("#8344AD", "#27AE60")) + facet_wrap(~alive_update) +
labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
deadalivecheck <- bigjoin2 %>% distinct(uniqueid, character, tsb, score, alive)
deadalivecheck %>% group_by(alive) %>% mutate(avgscore = round(mean(score), 3)) %>%
ungroup() %>% mutate(alive_update = paste0("Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb, fill = alive)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) +
scale_fill_manual(values = c("#8344AD", "#27AE60")) + facet_wrap(~alive_update) +
labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
deadalivecheck %>% group_by(alive) %>% mutate(avgscore = round(mean(score), 3)) %>%
ungroup() %>% mutate(alive_update = paste0("Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb, fill = alive)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) +
scale_fill_manual(values = c("#8344AD", "#27AE60")) + facet_wrap(~alive_update) +
scale_fill_discrete(name = "", labels=c('dead', 'alive')) +
labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
deadalivecheck <- bigjoin2 %>% distinct(uniqueid, character, tsb, score, alive)
deadalivecheck %>% group_by(alive) %>% mutate(avgscore = round(mean(score), 3)) %>%
ungroup() %>% mutate(alive_update = paste0("Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb, fill = alive)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) +
facet_wrap(~alive_update) + scale_fill_manual(values = c("#8344AD", "#27AE60")) +
scale_fill_discrete(name = "", labels=c('dead', 'alive')) +
labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
deadalivecheck <- bigjoin2 %>% distinct(uniqueid, character, tsb, score, alive)
deadalivecheck %>% group_by(alive) %>% mutate(avgscore = round(mean(score), 3)) %>%
ungroup() %>% mutate(alive_update = paste0("Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) +
facet_wrap(~alive_update) + scale_fill_manual(values = c("#8344AD", "#27AE60")) +
scale_fill_discrete(name = "", labels=c('dead', 'alive')) +
labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
deadalivecheck <- bigjoin2 %>% distinct(uniqueid, character, tsb, score, alive)
deadalivecheck %>% group_by(alive) %>% mutate(avgscore = round(mean(score), 3)) %>%
ungroup() %>% mutate(alive_update = paste0("Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb, fill = alive)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) +
scale_fill_manual(values = c("#8344AD", "#27AE60")) + facet_wrap(~alive_update) +
scale_fill_discrete(name = "", labels=c('dead', 'alive')) +
labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
deadalivecheck <- bigjoin2 %>% distinct(uniqueid, character, tsb, score, alive)
deadalivecheck %>% group_by(alive) %>% mutate(avgscore = round(mean(score), 3)) %>%
ungroup() %>% mutate(alive_update = paste0("Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb, fill = alive)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) +
scale_fill_manual(values = c("#8344AD", "#27AE60")) + facet_wrap(~alive_update) +
scale_fill_discrete(name = "", labels=c('dead', 'alive')) +
labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
dingle <- deadalivecheck %>% group_by(alive) %>% mutate(avgscore = round(mean(score), 3)) %>%
ungroup() %>% mutate(alive_update = paste0("Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb, fill = alive)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) +
dingle + scale_fill_manual(values = c("#8344AD", "#27AE60")) + facet_wrap(~alive_update) +
scale_fill_discrete(name = "", labels=c('dead', 'alive')) +
labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
deadalivecheck <- bigjoin2 %>% distinct(uniqueid, character, tsb, score, alive)
dingle <- deadalivecheck %>% group_by(alive) %>% mutate(avgscore = round(mean(score), 3)) %>%
ungroup() %>% mutate(alive_update = paste0("Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb, fill = alive)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) +
dingle + scale_fill_manual(values = c("#8344AD", "#27AE60")) + facet_wrap(~alive_update) +
scale_fill_discrete(name = "", labels=c('dead', 'alive')) +
labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
deadalivecheck <- bigjoin2 %>% distinct(uniqueid, character, tsb, score, alive)
dingle <- deadalivecheck %>% group_by(alive) %>% mutate(avgscore = round(mean(score), 3)) %>%
ungroup() %>% mutate(alive_update = paste0("Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb, fill = alive)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks())
dingle + scale_fill_manual(values = c("#8344AD", "#27AE60")) + facet_wrap(~alive_update) +
scale_fill_discrete(name = "", labels=c('dead', 'alive')) +
labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
dingle + scale_fill_manual(values = c("#8344AD", "#27AE60")) + facet_wrap(~alive_update) +
scale_fill_discrete(name = "", labels=c('dead', 'alive')) +
labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
dingle + facet_wrap(~alive_update) +
scale_fill_discrete(values = c("#8344AD", "#27AE60"), name = "", labels=c('dead', 'alive')) +
labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
deadalivecheck <- bigjoin2 %>% distinct(uniqueid, character, tsb, score, alive)
dingle <- deadalivecheck %>% group_by(alive) %>% mutate(avgscore = round(mean(score), 3)) %>%
ungroup() %>% mutate(alive_update = paste0("Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb, fill = alive)) + scale_fill_manual(values = c("#8344AD", "#27AE60")) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~alive_update) +
scale_fill_discrete(name = "", labels=c('dead', 'alive')) +
labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
deadalivecheck <- bigjoin2 %>% distinct(uniqueid, character, tsb, score, alive)
dingle <- deadalivecheck %>% group_by(alive) %>% mutate(avgscore = round(mean(score), 3)) %>%
ungroup() %>% mutate(alive_update = paste0("Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb, fill = alive)) + scale_fill_manual(values = c("#8344AD", "#27AE60"), name = "", labels=c('dead', 'alive')) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~alive_update) +
labs(title = "Dead Characters' Advantage is Statistically Significant", x = 'Placement', y = 'Count')
dingle
deadalivecheck <- bigjoin2 %>% distinct(uniqueid, character, tsb, score, alive)
deadalivecheck %>% group_by(alive) %>% mutate(avgscore = round(mean(score), 3)) %>%
ungroup() %>% mutate(alive_update = paste0("Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb, fill = alive)) + scale_fill_manual(values = c("#8344AD", "#27AE60"), name = "", labels=c('dead', 'alive')) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~alive_update) +
labs(title = "Dead Characters' Advantage is Statistically Significant", x = 'Placement', y = 'Count')
deadalivecheck %>% group_by(alive) %>% mutate(weight = 1/n()) %>%
ggplot(aes(x = tsb, fill = alive)) + geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') +
scale_fill_manual(values = c("#8344AD", "#27AE60"), name = "", labels = c('dead', 'alive')) +
labs(title = 'Dead Characters Tend to Perform Better', x = 'Placement', y = 'Percentage')
deadalivecheck %>% group_by(alive) %>% summarise(mean(score))
allalive <- deadalivecheck %>% filter(alive == 1)
allalive
alldead <- deadalivecheck %>% filter(alive == 0)
alldead
t.test(alldead$score, allalive$score) #pval is .02- dead character avg is significantly different from alive character avg
anova(alldead$score, allalive$score) #pval is .02- dead character avg is significantly different from alive character avg
anova(alldead$score, allalive$score) #pval is .02- dead character avg is significantly different from alive character avg
class(alldead$score)
class(allalive$score)
class(alldead$score)
class(allalive$score)
t.test(alldead$score, allalive$score) #pval is .02- dead character avg is significantly different from alive character avg
mydoa <- t.test(alldead$score, allalive$score) #pval is .02- dead character avg is significantly different from alive character avg
mydoa[['p-value']]
mydoa[['p.value']]
round(mydoa[['p.value']], 4)
runApp('Desktop/NYCDSA/RWork/SNATCHGAME/snatchgame')
