shiny::runApp('~/Desktop/NYCDSA/RWork/oldstuff/flights')
runApp('~/Desktop/NYCDSA/RWork/oldstuff/demo_dash')
runApp()
runApp()
runApp()
getwd()
eps <- read.csv('./SGStats/eps.csv')
queens <- read.csv('./SGStats/queens.csv')
names(queens) <- queens[1,]
queens <- queens[-1,]
colnames(queens)[2] <- 'queen'
chars <- read.csv('./SGStats/chars.csv')
names(chars) <- chars[1,]
chars <- chars[-1,]
sapply(eps, class)
eps$airdate <- as.Date(eps$airdate)
eps$regas <- as.factor(eps$regas)
eps$internat <- as.factor(eps$internat)
eps$specialformat <- as.factor(eps$specialformat)
summary(eps)
sapply(queens, class)
queens$character2[queens$character2 == "N/A"] <- NA
queens$uniqueid <- as.numeric(queens$uniqueid)
sapply(chars, class)
chars <- chars[-6]
chars$alive <- as.factor(chars$alive)
chars$genre <- as.factor(chars$genre)
chars$genre2 <- as.factor(chars$genre2)
chars$genre3 <- as.factor(chars$genre3)
library(tidyverse)
#eps[10:31]
epspivot <- pivot_longer(eps, cols = 10:31, names_to = 'plcmnt', values_to = 'queen', values_drop_na = T) %>% filter(queen != 'N/A')
epspivot$queen <- replace(epspivot$queen, epspivot$queen == "Trinity The Tuck", "Trinity the Tuck")
queenspivot <- pivot_longer(queens, cols = 3:4, values_to = 'character') %>% drop_na(character) %>% select(c(1, 2, 4))
queenspivot$queen[queenspivot$queen == "Trinity The Tuck"] <- "Trinity the Tuck"
chars[4:5][chars[4:5] == "N/A"] <- NA
charpivot <- pivot_longer(chars, cols = 3:5, values_to = 'genres') %>% drop_na(genres)
charpivot <- charpivot[-3]
epqueenjoin <- inner_join(epspivot, queenspivot, by = c('uniqueid', 'queen'), multiple = 'all')
myby <- join_by(character == char)
bigjoin <- inner_join(epqueenjoin, charpivot, myby)
summary(bigjoin)
bigjoin <- bigjoin %>%
mutate(tsb = case_when(startsWith(tolower(plcmnt), 'safe') ~ 'SAFE',
startsWith(tolower(plcmnt), 'win') ~ 'WIN',
startsWith(tolower(plcmnt), 'high') ~ 'HIGH',
startsWith(tolower(plcmnt), 'bottom') ~ 'BOTTOM',
startsWith(tolower(plcmnt), 'elim') ~ 'ELIM'))
bigjoin$tsb <- factor(bigjoin$tsb, levels = c('ELIM', 'BOTTOM', 'SAFE', 'HIGH', 'WIN'))
summary(bigjoin)
summary(bigjoin$tsb) #439 results approx normally distributed- separate entry for each genre that each character is in, multi-hyphenates are NOT random (athlete pornstar is much rarer than actor-comedian or actor-model)
plot(bigjoin$tsb)
#one entry for each genre within a character
bigjoin %>% group_by(tsb) %>% summarise(bb = n())
#439 results approx normally distributed- separate entry for each genre that each character is in,
summary(bigjoin$tsb)
#one entry for each genre within a character
bigjoin %>% group_by(tsb) %>% summarise(bb = n())
#439 results approx normally distributed- separate entry for each genre that each character is in,
summary(bigjoin$tsb)
#one entry for each genre within a character
bigjoin %>% group_by(tsb) %>% summarise(bb = n())
#one entry for each genre within a character
bigjoin %>% group_by(tsb)
#439 results approx normally distributed- separate entry for each genre that each character is in,
summary(bigjoin$tsb)
#one entry for each genre within a character
bigjoin %>% group_by(tsb)
bigjoin %>% group_by(tsb) %>% summarise(bb = n())
bigjoin %>% group_by(tsb) %>% ggplot(., aes(x = tsb, y = bb)) + geom_col()
bigjoin %>% group_by(tsb) %>% ggplot(., aes(x = tsb)) + geom_col()
bigjoin %>% group_by(tsb) %>% ggplot(., aes(x = tsb)) + geom_bar()
bigjoin <- bigjoin %>%
mutate(score = case_when(tsb == 'WIN' ~ 1,
tsb == 'HIGH' ~ .5,
tsb == 'SAFE' ~ 0,
tsb == 'BOTTOM' ~ -.5,
tsb == 'ELIM' ~ -1))
bigjoin %>% group_by(genres) %>% summarise(avgscore = mean(score)) %>% arrange(desc(avgscore))
#Score instead of placement
bigjoin %>% group_by(score) %>% ggplot(., aes(x = score)) + geom_bar()
ggqqplot(bigjoin$score)
library('car')
qqplot(bigjoin$score)
qqplot(bigjoin$score)
qqPlot(bigjoin$score)
shapiro.test(bigjoin$score)
shapiro.test(bigjoin$tsb)
shapiro.test(bigjoin$score)
bigjoin <- bigjoin %>%
mutate(score = case_when(tsb == 'WIN' ~ 1,
tsb == 'HIGH' ~ .66,
tsb == 'SAFE' ~ 0,
tsb == 'BOTTOM' ~ -.66,
tsb == 'ELIM' ~ -1))
bigjoin %>% group_by(genres) %>% summarise(avgscore = mean(score)) %>% arrange(desc(avgscore))
qqPlot(bigjoin$score)
shapiro.test(bigjoin$score)
bigjoin <- bigjoin %>%
mutate(score = case_when(tsb == 'WIN' ~ 1,
tsb == 'HIGH' ~ .5,
tsb == 'SAFE' ~ 0,
tsb == 'BOTTOM' ~ -.5,
tsb == 'ELIM' ~ -1))
bigjoin %>% group_by(genres) %>% summarise(avgscore = mean(score)) %>% arrange(desc(avgscore))
bigjoin %>% distinct(uniqueid, queen, tsb) %>% group_by(queen)
#what about how all the QUEENS overall have done, disregarding characters? (BthDQ has one win)
bigjoin %>% distinct(uniqueid, queen, tsb) %>% group_by(queen) %>% ggplot(aes(x = tsb)) + geom_bar()
bigjoin %>% distinct(uniqueid, queen, tsb) %>% group_by(queen)
#what about how all the QUEENS overall have done, disregarding characters? (BthDQ has one win)
bigjoin %>% distinct(uniqueid, queen, tsb) %>% group_by(queen) %>% ggplot(aes(x = tsb)) + geom_bar()
bigjoin %>% distinct(uniqueid, character, tsb)
#what about how distinct CHARACTERS do? (entry for each character in every episode)
bigjoin %>% distinct(uniqueid, character, tsb) %>% ggplot(aes(x = tsb)) + geom_bar()
View(bigjoin)
#option to disregard All Stars or regular
#one entry for each genre within a character
bigjoin %>% filter(regas == 'reg') %>% group_by(tsb)
bigjoin %>% filter(regas == 'reg') %>% group_by(tsb) %>% ggplot(., aes(x = tsb)) + geom_bar()
#what about how distinct CHARACTERS do? (entry for each character in every episode)
bigjoin %>% distinct(uniqueid, character, tsb) %>% ggplot(aes(x = tsb)) + geom_bar()
#Multi-hyphenates counted multiple times, how do different genres do?
fullfacet <- bigjoin %>% group_by(tsb) %>% ggplot(aes(tsb)) + geom_bar() + facet_wrap(~genres)
#, scales = 'free_y')
fullfacet
#subsets
fullfacet %+% dplyr::filter(bigjoin, genres %in% c('Actor', 'GG'))
#examine genres
bigjoin %>% filter(genres == 'Athlete')
#examine genres
bigjoin %>% filter(genres == 'Actor')
#Dead Characters vs Alive Characters (at first appearance)
bigjoin %>% distinct(uniqueid, character, tsb, alive) %>% ggplot(aes(x = tsb)) + geom_bar() + facet_wrap(~alive)
genredensity <- bigjoin %>% group_by(tsb) %>% ggplot(aes(x=tsb), group=genres, fill=genres) + geom_density(adjust = .3, alpha = .4)
genredensity <- bigjoin %>% group_by(tsb) %>% ggplot(aes(x=tsb), group=genres, fill=genres) + geom_density(adjust = .3, alpha = .4) %+% dplyr::filter(., genres %in% c('Actor', 'GG'))
genredensity <- bigjoin %>% group_by(tsb) %>% ggplot(aes(x=tsb), group=genres, fill=genres)
genredensity <- genredensity + geom_density(adjust = .3, alpha = .4) %+% dplyr::filter(., genres %in% c('Actor', 'GG'))
genredensity
#, scales = 'free_y')
fullfacet
#subsets
fullfacet %+% dplyr::filter(bigjoin, genres %in% c('Actor', 'GG'))
genredensity <- bigjoin %>% group_by(tsb) %>% ggplot(aes(x=tsb), group=genres, fill=genres) + geom_density(adjust = .3, alpha = .4)
genredensity
genredensity <- genredensity + geom_density(adjust = .8, alpha = .4) %+% dplyr::filter(., genres %in% c('Actor', 'GG'))
genredensity <- bigjoin %>% group_by(tsb) %>% ggplot(aes(x=tsb), group=genres, fill=genres) + geom_density(adjust = .8, alpha = .4)
genredensity
genredensity <- genredensity %+% dplyr::filter(bigjoin, genres %in% c('Actor', 'GG'))
genredensity
genredensity <- genredensity %+% dplyr::filter(bigjoin, genres %in% c('Actor', 'GG'))
genredensity
genredensity <- bigjoin %>% group_by(tsb) %>% ggplot(aes(x=tsb), group=genres, fill=genres) + geom_density(adjust = .8, alpha = .4)
genredensity <- genredensity %+% dplyr::filter(bigjoin, genres %in% c('Actor', 'GG'))
genredensity
genredensity <- genredensity + geom_density(adjust = ., alpha = .4) %+% dplyr::filter(., genres %in% c('Actor', 'GG'))
genredensity
genredensity <- bigjoin %>% group_by(tsb) %>% ggplot(aes(x=tsb), group=genres, fill=genres) + geom_density(adjust = .8, alpha = .4)
genredensity <- genredensity %+% dplyr::filter(bigjoin, genres %in% c('Actor', 'GG'))
genredensity
genredensity <- bigjoin %>% filter(genres %in% c('Actor', 'GG')) group_by(tsb) %>% ggplot(aes(x=tsb), group=genres, fill=genres) + geom_density(adjust = .8, alpha = .4)
genredensity <- bigjoin %>% filter(genres %in% c('Actor', 'GG')) %>% group_by(tsb) %>% ggplot(aes(x=tsb), group=genres, fill=genres) + geom_density(adjust = .8, alpha = .4)
genredensity
genredensity <- bigjoin %>% filter(genres %in% c('Actor', 'GG')) %>% ggplot(aes(x=tsb), group=genres, fill=genres) + geom_density(adjust = .8, alpha = .4)
genredensity
genredensity <- bigjoin %>% filter(genres %in% c('Actor', 'GG')) %>% ggplot(aes(x=tsb), group=genres) + geom_density(adjust = .8, alpha = .4)
genredensity
#Dead Characters vs Alive Characters (at first appearance)
bigjoin %>% distinct(uniqueid, character, tsb, alive) %>% ggplot(aes(x = tsb)) + geom_bar() + facet_wrap(~alive)
doa
deadalivecheck <- bigjoin %>% distinct(uniqueid, character, score, alive)
doa <- ggplot(data = deadalivecheck, aes(x=score, group=alive, fill = alive)) + geom_density(adjust = .3, alpha = .4)
doa
genrecheck <- bigjoin %>% distinct(uniqueid, character, score, genre)
genrecheck <- bigjoin %>% distinct(uniqueid, character, score, genres)
genrecheck
genrecheck <- bigjoin %>% distinct(uniqueid, character, score, genres)
genredens <- genrecheck %>% filter(genres %in% c('Actor', 'GG')) %>% ggplot(data = genrecheck, aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .3, alpha = .4)
genredens
genredens <- genrecheck %>% filter(genres %in% c('Actor', 'GG')) %>% ggplot(data = genrecheck, aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .3, alpha = .4)
genrecheck <- bigjoin %>% distinct(uniqueid, character, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Actor', 'GG'))
genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .3, alpha = .4)
genredens
#Multi-hyphenates counted multiple times, how do different genres do?
fullfacet <- bigjoin %>% group_by(tsb) %>% ggplot(aes(tsb)) + geom_bar() + facet_wrap(~genres)
#, scales = 'free_y')
fullfacet
#subsets
fullfacet %+% dplyr::filter(bigjoin, genres %in% c('Actor', 'GG'))
#examine genres
#bigjoin %>% filter(genres == 'Actor')
genrecheck <- bigjoin %>% distinct(uniqueid, character, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Actor', 'GG'))
genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .3, alpha = .4)
genredens
#--------------------------------------------------------------
genrebar <- genrecheck %>% ggplot(aes(x=score), fill = genres, group = genres) + geom_bar()
genrebar
genrebar
#--------------------------------------------------------------
genrebar <- genrecheck %>% ggplot(aes(x=score), fill = genres, group = genres) + geom_bar() + facet_wrap(~genres)
genrebar
#examine genres- double check
#bigjoin %>% filter(genres == 'Actor')
#--------------------------------------------------------------
genrecheck <- bigjoin %>% distinct(uniqueid, character, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Actor', 'GG'))
genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .3, alpha = .4)
genredens
#--------------------------------------------------------------
genrebar <- genrecheck %>% ggplot(aes(x=score), fill = genres, group = genres) + geom_bar() + facet_wrap(~genres)
genrebar
#--------------------------------------------------------------
#examine genres- double check
#bigjoin %>% filter(genres == 'Actor')
#--------------------------------------------------------------
genrecheck <- bigjoin %>% distinct(uniqueid, character, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Actor', 'GG'))
#genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .3, alpha = .4)
genredens
#--------------------------------------------------------------
genrebar <- genrecheck %>% ggplot(aes(x=score), fill = genres, group = genres) + geom_bar() + facet_wrap(~genres)
genrebar
#--------------------------------------------------------------
#genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .1, alpha = .4)
genredens
#genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .6, alpha = .4)
genredens
#genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .5, alpha = .4)
genredens
#genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .5, alpha = .1)
genredens
#genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .5, alpha = .5)
genredens
#genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .6, alpha = .5)
genredens
#genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .4, alpha = .5)
genredens
genrecheck <- genrecheck %>% filter(genres %in% c('Actor', 'Singer'))
genredens
genrecheck <- genrecheck %>% filter(genres %in% c('Actor', 'Musician'))
#genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .4, alpha = .5)
genredens
genrecheck
#examine genres- double check
#bigjoin %>% filter(genres == 'Actor')
#--------------------------------------------------------------
genrecheck <- bigjoin %>% distinct(uniqueid, character, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Actor', 'Musician'))
genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .4, alpha = .5)
genredens
#examine genres- double check
#bigjoin %>% filter(genres == 'Actor')
#--------------------------------------------------------------
genrecheck <- bigjoin %>% distinct(uniqueid, character, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Actor', 'GG'))
genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .4, alpha = .5)
genredens
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .8, alpha = .5)
genredens
genrebar
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .6, alpha = .5)
genredens
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .5, alpha = .5)
genredens
#examine genres- double check
#bigjoin %>% filter(genres == 'Actor')
#--------------------------------------------------------------
genrecheck <- bigjoin %>% distinct(uniqueid, character, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Government', 'Drag Queen'))
genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=score, group=genres, fill = genres)) + geom_density(adjust = .5, alpha = .5)
genredens
#--------------------------------------------------------------
genrebar <- genrecheck %>% ggplot(aes(x=score), fill = genres, group = genres) + geom_bar() + facet_wrap(~genres)
genrebar
#examine genres- double check
#bigjoin %>% filter(genres == 'Actor')
#--------------------------------------------------------------
genrecheck <- bigjoin %>% distinct(uniqueid, character, tsb, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Government', 'Drag Queen'))
genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=tsb, group=genres, fill = genres)) + geom_density(adjust = .5, alpha = .5)
genredens
#--------------------------------------------------------------
genrebar <- genrecheck %>% ggplot(aes(x=tsb), fill = genres, group = genres) + geom_bar() + facet_wrap(~genres)
genrebar
#examine genres- double check
#bigjoin %>% filter(genres == 'Actor')
#--------------------------------------------------------------
genrecheck <- bigjoin %>% distinct(uniqueid, character, tsb, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Government', 'Drag Queen'))
genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=tsb, group=genres, fill = genres)) + geom_density(adjust = .5, alpha = .5)
genredens
#--------------------------------------------------------------
genrebar <- genrecheck %>% ggplot(aes(x=tsb), fill = genres, group = genres) + geom_bar() + facet_wrap(~genres)
genrebar
addcounts <- genrecheck %>% ggplot(aes(x=tsb), fill = genres, group = genres) + geom_bar() + labs(caption = paste("Total =", nrow(.))) + facet_wrap(~genres)
addcounts <- genrecheck %>% ggplot(aes(x=tsb), fill = genres, group = genres) + geom_bar() + labs(caption = paste("Total =", nrow(genrecheck))) + facet_wrap(~genres)
addcounts
#--------------------------------------------------------------
#addcounts2
genrecheck %>% group_by(genres) %>% mutate(genre_count = n())
#--------------------------------------------------------------
#addcounts2
genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ facet_wrap(~genre_update)
#--------------------------------------------------------------
#addcounts2
genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ facet_wrap(~genre_update)
#examine genres- double check
#bigjoin %>% filter(genres == 'Actor')
#--------------------------------------------------------------
genrecheck <- bigjoin %>% distinct(uniqueid, character, tsb, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Government', 'Naturalist'))
genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=tsb, group=genres, fill = genres)) + geom_density(adjust = .5, alpha = .5)
genredens
#--------------------------------------------------------------
genrebar <- genrecheck %>% ggplot(aes(x=tsb), fill = genres, group = genres) + geom_bar() + facet_wrap(~genres)
genrebar
#--------------------------------------------------------------
#addcounts2
genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ facet_wrap(~genre_update)
genrebar
#examine genres- double check
#bigjoin %>% filter(genres == 'Actor')
#--------------------------------------------------------------
genrecheck <- bigjoin %>% distinct(uniqueid, character, tsb, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Government', 'Naturalist'))
genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=tsb, group=genres, fill = genres)) + geom_density(adjust = .5, alpha = .5)
genredens
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ facet_wrap(~genre_update)
genrebar
#examine genres- double check
#bigjoin %>% filter(genres == 'Actor')
#--------------------------------------------------------------
genrecheck <- bigjoin %>% distinct(uniqueid, character, tsb, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Musician', 'Reality'))
genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=tsb, group=genres, fill = genres)) + geom_density(adjust = .5, alpha = .5)
genredens
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ facet_wrap(~genre_update)
genrebar
#examine genres- double check
#bigjoin %>% filter(genres == 'Actor')
#--------------------------------------------------------------
genrecheck <- bigjoin %>% distinct(uniqueid, character, tsb, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Musician', 'Reality'))
genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=tsb, group=genres, fill = genres)) + geom_density(adjust = .5, alpha = .5)
genredens
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ facet_wrap(~genre_update)
genrebar
#examine genres- double check
#bigjoin %>% filter(genres == 'Actor')
#--------------------------------------------------------------
genrecheck <- bigjoin %>% distinct(uniqueid, character, tsb, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Reality', 'RH'))
genrecheck
genredens <- genrecheck %>% ggplot(., aes(x=tsb, group=genres, fill = genres)) + geom_density(adjust = .5, alpha = .5)
genredens
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ facet_wrap(~genre_update)
genrebar
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#Dead Characters vs Alive Characters (at first appearance)
bigjoin %>% distinct(uniqueid, character, tsb, alive) %>% ggplot(aes(x = tsb)) + geom_bar() + facet_wrap(~alive)
deadalivecheck <- bigjoin %>% distinct(uniqueid, character, score, alive)
doa <- ggplot(data = deadalivecheck, aes(x=score, group=alive, fill = alive)) + geom_density(adjust = .3, alpha = .4)
doa
doa <- ggplot(data = deadalivecheck, aes(x=score, group=alive, fill = alive)) + geom_density(adjust = .5, alpha = .5)
doa
