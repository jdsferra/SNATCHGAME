ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update)
genrebar
genrecheck <- genrecheck %>% filter(genres %in% c('entertainer', 'tv'))
#genredens <- genrecheck %>% ggplot(., aes(x=tsb, group=genres, fill = genres)) + geom_bar(position = 'dodge')
#genredens
#^THIS NEEDS WORK
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update)
genrebar
#examine genres- double check
#bigjoin %>% filter(genres == 'TV')
#--------------------------------------------------------------
genrecheck <- bigjoin2 %>% distinct(uniqueid, character, tsb, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('entertainer', 'tv'))
#genredens <- genrecheck %>% ggplot(., aes(x=tsb, group=genres, fill = genres)) + geom_bar(position = 'dodge')
#genredens
#^THIS NEEDS WORK
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update)
genrebar
ggplot(genrecheck %>% group_by(genres) %>% mutate(weight = 1/n()),
aes(x = tsb, fill = genres)) +
geom_bar(aes(weight = weight), stat = 'count', position = 'dodge')
#genredens <- genrecheck %>% ggplot(., aes(x=tsb, group=genres, fill = genres)) + geom_bar(position = 'dodge')
#genredens
#^THIS NEEDS WORK
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update)
genrebar
#genredens <- genrecheck %>% ggplot(., aes(x=tsb, group=genres, fill = genres)) + geom_bar(position = 'dodge')
#genredens
#^THIS NEEDS WORK
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison')
genrebar
#genredens <- genrecheck %>% ggplot(., aes(x=tsb, group=genres, fill = genres)) + geom_bar(position = 'dodge')
#genredens
#^THIS NEEDS WORK
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count')
genrebar
ggplot(genrecheck %>% group_by(genres) %>% mutate(weight = 1/n()),
aes(x = tsb, fill = genres)) +
geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') + labs(title = 'Genre Comparison by Percentage')
ggplot(genrecheck %>% group_by(genres) %>% mutate(weight = 1/n()),
aes(x = tsb, fill = genres)) +
geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') + labs(title = 'Genre Comparison by Percentage', xlab = 'Placement')
ggplot(genrecheck %>% group_by(genres) %>% mutate(weight = 1/n()),
aes(x = tsb, fill = genres)) +
geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') + labs(title = 'Genre Comparison by Percentage', x = 'Placement', y = 'Percent')
#genredens <- genrecheck %>% ggplot(., aes(x=tsb, group=genres, fill = genres)) + geom_bar(position = 'dodge')
#genredens
#^THIS NEEDS WORK
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count', x = 'Placement')
genrebar
#genredens <- genrecheck %>% ggplot(., aes(x=tsb, group=genres, fill = genres)) + geom_bar(position = 'dodge')
#genredens
#^THIS NEEDS WORK
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
#examine genres- double check
#bigjoin %>% filter(genres == 'TV')
#--------------------------------------------------------------
genrecheck <- bigjoin1 %>% distinct(uniqueid, character, tsb, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('entertainer', 'tv'))
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
genrebar
#examine genres- double check
#bigjoin %>% filter(genres == 'TV')
#--------------------------------------------------------------
genrecheck <- bigjoin1 %>% distinct(uniqueid, character, tsb, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Athlete', 'Reality'))
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n()) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
genrebar
ggplot(genrecheck %>% group_by(genres) %>% mutate(weight = 1/n()),
aes(x = tsb, fill = genres)) +
geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') + labs(title = 'Genre Comparison by Percentage', x = 'Placement', y = 'Percentage')
#examine genres- double check
#bigjoin %>% filter(genres == 'TV')
#--------------------------------------------------------------
genrecheck <- bigjoin1 %>% distinct(uniqueid, character, tsb, score, genres)
genrebar
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n(), avgscore = mean(score)) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count, ";", avgscore)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
genrebar
#examine genres- double check
#bigjoin %>% filter(genres == 'TV')
#--------------------------------------------------------------
genrecheck <- bigjoin1 %>% distinct(uniqueid, character, tsb, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Athlete', 'Reality'))
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n(), avgscore = mean(score)) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count, ";", avgscore)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n(), avgscore = mean(score)) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count, ";", avgscore)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
genrebar
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n(), avgscore = round(mean(score), 2)) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count, "; Mean Score:", avgscore)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
genrebar
genrebar
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n(), avgscore = round(mean(score), 3)) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count, "; Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
genrebar
#examine genres- double check
#bigjoin %>% filter(genres == 'TV')
#--------------------------------------------------------------
genrecheck <- bigjoin1 %>% distinct(uniqueid, character, tsb, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Athlete', 'Reality'))
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n(), avgscore = round(mean(score), 3)) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count, "; Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
genrebar
#^THIS IS GOOD
ggplot(genrecheck %>% group_by(genres) %>% mutate(weight = 1/n()),
aes(x = tsb, fill = genres)) +
geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') + labs(title = 'Genre Comparison by Percentage', x = 'Placement', y = 'Percentage')
genrecheck
genrecheck %>% group_by(genres)
ggplot(genrecheck %>% group_by(genres) %>% mutate(weight = 1/n()),
aes(x = tsb, fill = genres)) +
geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') + labs(title = 'Percent Placement by Genre', x = 'Placement', y = 'Percentage')
tabletab <- bigjoin1 %>% distinct(uniqueid, season, internat, character, tsb, score, genres)
tabletab <- tabletab %>% filter(genres %in% c('Athlete', 'Reality'))
tabletab %>% group_by(genres)
tabletab %>% group_by(genres) %>% select(-1)
#examine genres- double check
#bigjoin %>% filter(genres == 'TV')
#distinct(uniqueid, character, tsb, score, genres)
#--------------------------------------------------------------
genrecheck <- bigjoin1 %>% distinct(uniqueid, season, internat, character, tsb, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Athlete', 'Reality'))
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n(), avgscore = round(mean(score), 3)) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count, "; Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
genrebar
ggplot(genrecheck %>% group_by(genres) %>% mutate(weight = 1/n()),
aes(x = tsb, fill = genres)) +
geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') + labs(title = 'Percent Placement by Genre', x = 'Placement', y = 'Percentage')
genrecheck %>% group_by(genres) %>% select(-1)
#For RuPaul Only, bigjoin %>% filter
bigjoin1 %>% filter(internat != 'CAN')
#Disregard All-Stars and UKvTW
bigjoin1 %>% filter(regas == 'reg')
bigjoin %>% filter(genres == 'entertainer')
bigjoin2 %>% filter(genres == 'entertainer')
summary(bigjoin2)
bigjoin2 %>% filter(genres == 'entertainer')
summary(bigjoin2)
#--------------------------------------------------------------
genrecheck <- bigjoin1 %>% distinct(uniqueid, season, internat, character, tsb, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('Athlete', 'Reality'))
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n(), avgscore = round(mean(score), 3)) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count, "; Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
genrecheck <- genrecheck %>% filter(genres %in% c('musician', 'pubfig'))
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n(), avgscore = round(mean(score), 3)) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count, "; Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
genrebar
#--------------------------------------------------------------
genrecheck <- bigjoin2 %>% distinct(uniqueid, season, internat, character, tsb, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('musician', 'pubfig'))
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n(), avgscore = round(mean(score), 3)) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count, "; Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
genrebar
#---------------------
ggplot(genrecheck %>% group_by(genres) %>% mutate(weight = 1/n()),
aes(x = tsb, fill = genres)) +
geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') + labs(title = 'Percent Placement by Genre', x = 'Placement', y = 'Percentage')
genrecheck %>% group_by(genres) %>% select(-1)
genrecheck %>% group_by(genres) %>% select(-1)
genrecheck %>% group_by(genres) %>% select(-1)
#examine genres- double check
#bigjoin %>% filter(genres == 'TV')
#------------
#For RuPaul Only
#bigjoin1 %>% filter(internat != 'CAN')
#Disregard All-Stars Formats
#bigjoin1 %>% filter(regas == 'reg')
#--------------------------------------------------------------
genrecheck <- bigjoin2 %>% distinct(uniqueid, season, internat, character, tsb, score, genres)
genrecheck <- genrecheck %>% filter(genres %in% c('musician', 'pubfig'))
#--------------------------------------------------------------
genrebar <- genrecheck %>% group_by(genres) %>% mutate(genre_count = n(), avgscore = round(mean(score), 3)) %>%
ungroup() %>%
mutate(genre_update = paste0(genres, "; n=", genre_count, "; Mean Score: ", avgscore)) %>%
ggplot(aes(x = tsb)) + geom_bar()+ scale_y_continuous(breaks= pretty_breaks()) + facet_wrap(~genre_update) + labs(title = 'Genre Comparison by Count', x = 'Placement', y = 'Count')
genrebar
#^THIS IS GOOD
#---------------------
ggplot(genrecheck %>% group_by(genres) %>% mutate(weight = 1/n()),
aes(x = tsb, fill = genres)) +
geom_bar(aes(weight = weight), stat = 'count', position = 'dodge') + labs(title = 'Percent Placement by Genre', x = 'Placement', y = 'Percentage')
genrecheck %>% group_by(genres) %>% select(-1)
### I am suspicious of trying to do t-testing on this, because
#install.packages('rstatix')
library(rstatix)
genrecheck2 <- bigjoin2 %>% distinct(uniqueid, character, tsb, score, genres)
genrecheck2
genrecheck2$score
genrecheck2 %>% group_by(genres) %>% get_summary_stats(score, type = "mean_sd")
genreanova <- genrecheck2 %>% anova_test(score ~ genres)
genreanova #p-value here is .027, there are statistically-significant differences between the groups!
genreanova #p-value here is .027, there are statistically-significant differences between the groups!
pwc <- pairwise.t.test(genrecheck2$score, genrecheck2$genres, p.adj= 'bonferroni')
pwc
pwc <- pairwise.t.test(genrecheck2$score, genrecheck2$genres, p.adj= 'none')
pwc
shiny::runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('~/Desktop/NYCDSA/RWork/oldstuff/flights')
runApp('~/Desktop/NYCDSA/RWork/oldstuff/flights')
getwd()
library(tidyverse)
eps <- read.csv('./SGStats/eps.csv')
queens <- read.csv('./SGStats/queens.csv')
names(queens) <- queens[1,]
queens <- queens[-1,]
colnames(queens)[2] <- 'queen'
chars <- read.csv('./SGStats/chars.csv')
sapply(eps, class)
eps$airdate <- as.Date(eps$airdate)
eps$regas <- as.factor(eps$regas)
eps$internat <- as.factor(eps$internat)
eps$specialformat <- as.factor(eps$specialformat)
summary(eps)
sapply(queens, class)
queens$character2[queens$character2 == "N/A"] <- NA
queens$uniqueid <- as.numeric(queens$uniqueid)
View(chars)
sapply(chars, class)
chars$alive <- as.factor(chars$alive)
chars$genre <- as.factor(chars$genre)
chars$genre2 <- as.factor(chars$genre2)
chars$genre3 <- as.factor(chars$genre3)
chars1 <- chars[1:5]
chars2 <- chars[, -c(3:5)]
chars1
chars2
#eps[10:31]
epspivot <- pivot_longer(eps, cols = 10:31, names_to = 'plcmnt', values_to = 'queen', values_drop_na = T) %>% filter(queen != 'N/A')
queenspivot <- pivot_longer(queens, cols = 3:4, values_to = 'character') %>% drop_na(character) %>% select(c(1, 2, 4))
chars1[4:5][chars1[4:5] == "N/A"] <- NA
char1pivot <- pivot_longer(chars1, cols = 3:5, values_to = 'genres') %>% drop_na(genres)
char1pivot <- char1pivot[-3]
char2pivot <- pivot_longer(chars2, cols = 3:12, values_to = 'genres') %>% drop_na(genres)
char2pivot = char2pivot[-4]
char2pivot <- char2pivot %>% rename('genres' = 'name')
View(char2pivot)
View(chars)
View(chars2)
char2pivot <- pivot_longer(chars2, cols = 3:13, values_to = 'genres') %>% drop_na(genres)
char2pivot = char2pivot[-4]
char2pivot <- char2pivot %>% rename('genres' = 'name')
epqueenjoin <- inner_join(epspivot, queenspivot, by = c('uniqueid', 'queen'), multiple = 'all')
myby <- join_by(character == char)
bigjoin1 <- inner_join(epqueenjoin, char1pivot, myby)
bigjoin2 <- inner_join(epqueenjoin, char2pivot, myby)
bigjoin2$genres <- as.factor(bigjoin2$genres)
summary(bigjoin2)
bigjoin1 <- bigjoin1 %>%
mutate(tsb = case_when(startsWith(tolower(plcmnt), 'safe') ~ 'SAFE',
startsWith(tolower(plcmnt), 'win') ~ 'WIN',
startsWith(tolower(plcmnt), 'high') ~ 'HIGH',
startsWith(tolower(plcmnt), 'bottom') ~ 'BOTTOM',
startsWith(tolower(plcmnt), 'elim') ~ 'ELIM'))
bigjoin2 <- bigjoin2 %>%
mutate(tsb = case_when(startsWith(tolower(plcmnt), 'safe') ~ 'SAFE',
startsWith(tolower(plcmnt), 'win') ~ 'WIN',
startsWith(tolower(plcmnt), 'high') ~ 'HIGH',
startsWith(tolower(plcmnt), 'bottom') ~ 'BOTTOM',
startsWith(tolower(plcmnt), 'elim') ~ 'ELIM'))
bigjoin1$tsb <- factor(bigjoin1$tsb, levels = c('ELIM', 'BOTTOM', 'SAFE', 'HIGH', 'WIN'))
bigjoin2$tsb <- factor(bigjoin2$tsb, levels = c('ELIM', 'BOTTOM', 'SAFE', 'HIGH', 'WIN'))
#summary(bigjoin)
bigjoin1 <- bigjoin1 %>%
mutate(score = case_when(tsb == 'WIN' ~ 1,
tsb == 'HIGH' ~ .5,
tsb == 'SAFE' ~ 0,
tsb == 'BOTTOM' ~ -.5,
tsb == 'ELIM' ~ -1))
bigjoin1 %>% group_by(genres) %>% summarise(avgscore = mean(score)) %>% arrange(desc(avgscore))
bigjoin2 <- bigjoin2 %>%
mutate(score = case_when(tsb == 'WIN' ~ 1,
tsb == 'HIGH' ~ .5,
tsb == 'SAFE' ~ 0,
tsb == 'BOTTOM' ~ -.5,
tsb == 'ELIM' ~ -1))
bigjoin2 %>% group_by(genres) %>% summarise(avgscore = mean(score)) %>% arrange(desc(avgscore))
View(bigjoin1)
View(bigjoin1)
View(bigjoin2)
write.csv(bigjoin1, 'bigjoin1.csv')
write.csv(bigjoin2, 'bigjoin2.csv')
getwd()
read.csv('bigjoin1.csv')
bj1 <- read.csv('bigjoin1.csv')
summary(bj1)
View(bj1)
write.csv(bigjoin1, 'bigjoin1.csv', row.names=F)
getwd()
library(tidyverse)
eps <- read.csv('./SGStats/eps.csv')
queens <- read.csv('./SGStats/queens.csv')
names(queens) <- queens[1,]
queens <- queens[-1,]
colnames(queens)[2] <- 'queen'
chars <- read.csv('./SGStats/chars.csv')
sapply(eps, class)
eps$airdate <- as.Date(eps$airdate)
eps$regas <- as.factor(eps$regas)
eps$internat <- as.factor(eps$internat)
eps$specialformat <- as.factor(eps$specialformat)
summary(eps)
sapply(queens, class)
queens$character2[queens$character2 == "N/A"] <- NA
queens$uniqueid <- as.numeric(queens$uniqueid)
sapply(chars, class)
chars$alive <- as.factor(chars$alive)
chars$genre <- as.factor(chars$genre)
chars$genre2 <- as.factor(chars$genre2)
chars$genre3 <- as.factor(chars$genre3)
chars1 <- chars[1:5]
chars2 <- chars[, -c(3:5)]
chars1
chars2
#eps[10:31]
epspivot <- pivot_longer(eps, cols = 10:31, names_to = 'plcmnt', values_to = 'queen', values_drop_na = T) %>% filter(queen != 'N/A')
queenspivot <- pivot_longer(queens, cols = 3:4, values_to = 'character') %>% drop_na(character) %>% select(c(1, 2, 4))
chars1[4:5][chars1[4:5] == "N/A"] <- NA
char1pivot <- pivot_longer(chars1, cols = 3:5, values_to = 'genres') %>% drop_na(genres)
char1pivot <- char1pivot[-3]
char2pivot <- pivot_longer(chars2, cols = 3:13, values_to = 'genres') %>% drop_na(genres)
char2pivot = char2pivot[-4]
char2pivot <- char2pivot %>% rename('genres' = 'name')
epqueenjoin <- inner_join(epspivot, queenspivot, by = c('uniqueid', 'queen'), multiple = 'all')
myby <- join_by(character == char)
bigjoin1 <- inner_join(epqueenjoin, char1pivot, myby)
bigjoin2 <- inner_join(epqueenjoin, char2pivot, myby)
bigjoin2$genres <- as.factor(bigjoin2$genres)
summary(bigjoin2)
bigjoin1 <- bigjoin1 %>%
mutate(tsb = case_when(startsWith(tolower(plcmnt), 'safe') ~ 'SAFE',
startsWith(tolower(plcmnt), 'win') ~ 'WIN',
startsWith(tolower(plcmnt), 'high') ~ 'HIGH',
startsWith(tolower(plcmnt), 'bottom') ~ 'BOTTOM',
startsWith(tolower(plcmnt), 'elim') ~ 'ELIM'))
bigjoin2 <- bigjoin2 %>%
mutate(tsb = case_when(startsWith(tolower(plcmnt), 'safe') ~ 'SAFE',
startsWith(tolower(plcmnt), 'win') ~ 'WIN',
startsWith(tolower(plcmnt), 'high') ~ 'HIGH',
startsWith(tolower(plcmnt), 'bottom') ~ 'BOTTOM',
startsWith(tolower(plcmnt), 'elim') ~ 'ELIM'))
bigjoin1$tsb <- factor(bigjoin1$tsb, levels = c('ELIM', 'BOTTOM', 'SAFE', 'HIGH', 'WIN'))
bigjoin2$tsb <- factor(bigjoin2$tsb, levels = c('ELIM', 'BOTTOM', 'SAFE', 'HIGH', 'WIN'))
#summary(bigjoin)
bigjoin1 <- bigjoin1 %>%
mutate(score = case_when(tsb == 'WIN' ~ 1,
tsb == 'HIGH' ~ .5,
tsb == 'SAFE' ~ 0,
tsb == 'BOTTOM' ~ -.5,
tsb == 'ELIM' ~ -1))
bigjoin1 %>% group_by(genres) %>% summarise(avgscore = mean(score)) %>% arrange(desc(avgscore))
bigjoin2 <- bigjoin2 %>%
mutate(score = case_when(tsb == 'WIN' ~ 1,
tsb == 'HIGH' ~ .5,
tsb == 'SAFE' ~ 0,
tsb == 'BOTTOM' ~ -.5,
tsb == 'ELIM' ~ -1))
bigjoin2 %>% group_by(genres) %>% summarise(avgscore = mean(score)) %>% arrange(desc(avgscore))
write.csv(bigjoin1, 'bigjoin1.csv', row.names=F)
write.csv(bigjoin2, 'bigjoin2.csv', row.names=F)
bj1 <- read.csv('bigjoin1.csv')
summary(bj1)
bigjoin2 <- read.csv('bigjoin2.csv')
bigjoin1 <- read.csv('bigjoin1.csv')
bigjoin2 <- read.csv('bigjoin2.csv')
View(bigjoin1)
View(bigjoin2)
#preformatted joins (1 more granular genres, 2 less)
bigjoin1 <- read.csv('bigjoin1.csv')
bigjoin2 <- read.csv('bigjoin2.csv')
bigjoin1$airdate <- as.Date(bigjoin1$airdate)
bigjoin2$airdate <- as.Date(bigjoin2$airdate)
bigjoin1$regas <- as.factor(bigjoin1$regas)
bigjoin2$regas <- as.factor(bigjoin2$regas)
bigjoin1$internat <- as.factor(bigjoin1$internat)
bigjoin2$internat <- as.factor(bigjoin2$internat)
bigjoin1$specialformat <- as.factor(bigjoin1$specialformat)
bigjoin2$specialformat <- as.factor(bigjoin2$specialformat)
bigjoin1$alive <- as.factor(bigjoin1$alive)
bigjoin2$alive <- as.factor(bigjoin2$alive)
bigjoin1$genres <- as.factor(bigjoin1$genres)
bigjoin2$genres <- as.factor(bigjoin2$genres)
bigjoin1$tsb <- factor(bigjoin1$tsb, levels = c('ELIM', 'BOTTOM', 'SAFE', 'HIGH', 'WIN'))
bigjoin2$tsb <- factor(bigjoin2$tsb, levels = c('ELIM', 'BOTTOM', 'SAFE', 'HIGH', 'WIN'))
summary(bigjoin1)
summary(bigjoin2)
summary(bigjoin1)
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
runApp('snatchgame')
